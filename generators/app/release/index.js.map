{"version":3,"sources":["../lib/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/*\n *         .°\n *        |\n *     .-----.\n *     | | | |       Byte-Sized JavaScript\n *     \\  °  /          Module Generator\n *   ___-___-___   https://bit.ly/bytesized\n *  ()_   .   _()\n *  /  /\\ : /\\  \\\n * (___)| . |(___)\n *\n * This project is a part of the “Byte-Sized JavaScript” videocast.\n *\n * You can watch “Byte-Sized JavaScript” at: https://bit.ly/bytesized\n *\n * MIT Licensed — See LICENSE.md\n *\n * Send your comments, suggestions, and feedback to me@volkan.io\n */\n\nimport yeoman from 'yeoman-generator';\nimport chalk from 'chalk';\nimport yosay from 'yosay';\nimport { readFile } from 'fs';\n\nmodule.exports = yeoman.Base.extend( {\n    prompting: function prompt() {\n        this.log( yosay(\n            `Welcome to the breathtaking ${chalk.red( 'Byte-Sized JavaScript' )} project generator!`\n        ) );\n\n        const prompts = [ {\n            type: 'input',\n            name: 'bannerPath',\n            message: 'Can you provide me the path to your banner file?',\n            default: this.destinationPath( 'banner.txt' )\n        }, {\n            type: 'input',\n            name: 'srcHeaderPath',\n            message: 'Where is your source code header file?',\n            default: this.destinationPath( 'source_header.txt' )\n        }, {\n            type: 'input',\n            name: 'readmeExtrasPath',\n            message: 'Where is your extra README text file?',\n            default: this.destinationPath( 'readme_extras.txt' )\n        }, {\n            type: 'input',\n            name: 'appName',\n            message: 'What is the name of your project? (for NPM)',\n            default: 'UnicornLaunchingCatapult'\n        }, {\n            type: 'input',\n            name: 'appDescription',\n            message: 'Can you describe your project a little?',\n            default: 'Throws unicorns using a catapult.'\n        }, {\n            type: 'input',\n            name: 'userName',\n            message: 'What is your name?',\n            default: 'Anakin Skywalker'\n        }, {\n            type: 'input',\n            name: 'userEmail',\n            message: 'What is your email?',\n            default: 'vader@galaxy.empire'\n        }, {\n            type: 'input',\n            name: 'userWebsite',\n            message: 'Can you give me your personal website URL?',\n            default: 'https://vader.darth'\n        }, {\n            type: 'input',\n            name: 'projectWebsite',\n            message: 'Can you give me a URL for the project’s website?',\n            default: 'https://bit.ly/bytesized'\n        } ];\n\n        return this.prompt( prompts ).then( ( props ) => {\n            this.props = props;\n\n            return null;\n        } );\n    },\n\n    writing: function write() {\n        const bannerPathPromise = new Promise( ( resolve, reject ) => {\n            readFile( this.props.bannerPath, { encoding: 'utf8' }, ( err, data ) => {\n                if ( err ) {\n                    console.log( `Warning: cannot read from “${this.props.bannerPath}”.` );\n                    \n                    resolve( {\n                        docBanner: '',\n                        srcBanner: ' * '\n                    } );\n \n                    return;\n                }\n\n                resolve( {\n                    docBanner: data,\n                    srcBanner: data.replace( /^/gm, ' * ' )\n                } );\n            } );\n        } );\n        const srcHeaderPathPromise = new Promise( ( resolve, reject ) => {\n            readFile( this.props.srcHeaderPath, { encoding: 'utf8' }, ( err, data ) => {\n                if ( err ) {\n                    console.log( `Warning: cannot read from “${this.props.srcHeaderPath}”.` );\n                    \n                    resolve( {\n                        srcHeader: ''\n                    } );\n\n                    return;\n                }\n\n                resolve( {\n                    srcHeader: data\n                } );\n            } );\n        } );\n        const readmeExtrasPromise = new Promise( ( resolve, reject ) => {\n            readFile( this.props.readmeExtrasPath, { encoding: 'utf8' }, ( err, data ) => {\n                if ( err ) {\n                    console.log( `Warning: cannot read from “${this.props.srcHeaderPath}”.` );\n                    \n                    resolve( {\n                        readmeExtras: ''\n                    } );\n\n                    return;\n                }\n\n                resolve( {\n                    readmeExtras: data\n                } );\n            } );\n        } );\n\n        Promise.all( [ bannerPathPromise, srcHeaderPathPromise, readmeExtrasPromise ] )\n            .then( ( values ) => {\n                if ( !values || !values.length ) { return; }\n\n                this.props.docBanner = values[ 0 ].docBanner;\n                this.props.srcBanner = values[ 0 ].srcBanner;\n                this.props.srcHeader = values[ 1 ].srcHeader;\n                this.props.readmeExtras = values[ 2 ].readmeExtras;\n\n                [\n                    'bin/transpile.js',\n                    'lib/index.js',\n                    'test/index.js',\n                    '.babelrc',\n                    '.editorconfig',\n                    '.eslintrc',\n                    '.gitignore',\n                    'CHANGELOG.md',\n                    'CODE_OF_CONDUCT.md',\n                    'index.js',\n                    'LICENSE.md',\n                    'package.json',\n                    'README.md'\n                ].map( ( file ) => this.fs.copyTpl(\n                    this.templatePath( file ),\n                    this.destinationPath( file ),\n                    this.props\n                ) );\n            } );\n    },\n\n    install: function deploy() {\n        //this.installDependencies();\n        this.npmInstall( [\n            'eslint',\n            'eslint-plugin-babel',\n            'babel-cli',\n            'babel-eslint',\n            'babel-preset-es2015',\n            'babil'\n        ], { 'saveDev': true } );\n    }\n} );\n"]}